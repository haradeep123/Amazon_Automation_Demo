name: Selenium Automation Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to run tests on'
        required: true
        default: 'chrome'
        type: choice
        options:
          - chrome
          - firefox
          - edge
      test_suite:
        description: 'Test suite to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - smoke
          - regression
          - broken-links
          - priority
          - functional
          - sanity

jobs:
  automation-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chrome]
        java-version: [11]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
        
    - name: Install ChromeDriver
      uses: nanasess/setup-chromedriver@v2
      
    - name: Start Xvfb (Virtual Display)
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
    - name: Verify Maven installation
      run: mvn --version
      
    - name: Clean and compile
      run: mvn clean compile
      
    - name: Run tests with retry support
      run: |
        export DISPLAY=:99
        mvn test -Dbrowser=${{ matrix.browser }} -Djava.awt.headless=true -Dsurefire.suiteXmlFiles=src/test/resources/testng-with-retry.xml
      env:
        BROWSER: ${{ matrix.browser }}
        RETRY_ENABLED: true
        
    - name: Generate Surefire Report
      if: always()
      run: mvn surefire-report:report
      
    - name: Upload Test Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-${{ matrix.browser }}
        path: |
          target/surefire-reports/
          reports/
          target/site/
        retention-days: 30
        
    - name: Upload Screenshots
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: screenshots-${{ matrix.browser }}
        path: reports/screenshots/
        retention-days: 30
        
    - name: Publish Test Results
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: TestNG Results
        path: target/surefire-reports/TEST-*.xml
        reporter: java-junit
        fail-on-error: false
        
    - name: Comment PR with test results
      if: always() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Read test results
          let testSummary = 'Test execution completed!\n\n';
          
          try {
            const reportsDir = 'target/surefire-reports';
            if (fs.existsSync(reportsDir)) {
              const files = fs.readdirSync(reportsDir);
              const xmlFiles = files.filter(file => file.startsWith('TEST-') && file.endsWith('.xml'));
              
              testSummary += `ðŸ“Š **Test Summary:**\n`;
              testSummary += `- Report files found: ${xmlFiles.length}\n`;
              testSummary += `- Browser: ${{ matrix.browser }}\n`;
              testSummary += `- Java Version: ${{ matrix.java-version }}\n`;
              testSummary += `- Retry Support: âœ… Enabled (max 2 retries per test)\n\n`;
            }
          } catch (error) {
            testSummary += `Error reading test results: ${error.message}\n`;
          }
          
          testSummary += `ðŸ”— [View detailed reports in artifacts](${context.payload.pull_request.html_url}/checks)\n`;
          testSummary += `ðŸ“¸ Screenshots and reports are available in the workflow artifacts.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: testSummary
          });

  smoke-tests:
    runs-on: ubuntu-latest
    if: github.event.inputs.test_suite == 'smoke' || github.event.inputs.test_suite == 'all' || github.event_name != 'workflow_dispatch'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install Chrome
      uses: browser-actions/setup-chrome@v1
      
    - name: Start Xvfb
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
    - name: Run Smoke Tests
      run: |
        export DISPLAY=:99
        mvn test -Dsurefire.suiteXmlFiles=src/test/resources/testng-smoke.xml -Dbrowser=chrome
        
    - name: Upload Smoke Test Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: smoke-test-reports
        path: |
          target/surefire-reports/
          reports/

  broken-links-check:
    runs-on: ubuntu-latest
    if: github.event.inputs.test_suite == 'broken-links' || github.event.inputs.test_suite == 'all' || github.event_name != 'workflow_dispatch'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install Chrome
      uses: browser-actions/setup-chrome@v1
      
    - name: Start Xvfb
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
    - name: Run Broken Links Tests
      run: |
        export DISPLAY=:99
        mvn test -Dtest=BrokenLinksTest -Dbrowser=chrome
        
    - name: Upload broken links results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: broken-links-results
        path: |
          broken_links.txt
          working_links.txt
          target/surefire-reports/
          reports/

  priority-tests:
    runs-on: ubuntu-latest
    if: github.event.inputs.test_suite == 'priority' || github.event.inputs.test_suite == 'all'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install Chrome
      uses: browser-actions/setup-chrome@v1
      
    - name: Start Xvfb
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
    - name: Run Priority-based Tests
      run: |
        export DISPLAY=:99
        mvn test -Dsurefire.suiteXmlFiles=src/test/resources/testng-priority.xml -Dbrowser=chrome
        
    - name: Upload Priority Test Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: priority-test-reports
        path: |
          target/surefire-reports/
          reports/

  functional-tests:
    runs-on: ubuntu-latest
    if: github.event.inputs.test_suite == 'functional' || github.event.inputs.test_suite == 'all'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install Chrome
      uses: browser-actions/setup-chrome@v1
      
    - name: Start Xvfb
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
    - name: Run Functional Group Tests
      run: |
        export DISPLAY=:99
        mvn test -Dsurefire.suiteXmlFiles=src/test/resources/testng-functional.xml -Dbrowser=chrome
        
    - name: Upload Functional Test Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: functional-test-reports
        path: |
          target/surefire-reports/
          reports/

  sanity-tests:
    runs-on: ubuntu-latest
    if: github.event.inputs.test_suite == 'sanity' || github.event.inputs.test_suite == 'all'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install Chrome
      uses: browser-actions/setup-chrome@v1
      
    - name: Start Xvfb
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
    - name: Run Sanity Tests
      run: |
        export DISPLAY=:99
        mvn test -Dsurefire.suiteXmlFiles=src/test/resources/testng-sanity.xml -Dbrowser=chrome
        
    - name: Upload Sanity Test Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: sanity-test-reports
        path: |
          target/surefire-reports/
          reports/

  cross-browser-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.test_suite == 'all')
    
    strategy:
      matrix:
        browser: [chrome, firefox]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install browsers
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg
        
        # Install Chrome
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        
        # Install Firefox
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable firefox
        
    - name: Start Xvfb
      run: |
        sudo apt-get install -y xvfb
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
    - name: Run Cross-Browser Tests
      run: |
        export DISPLAY=:99
        mvn test -Dbrowser=${{ matrix.browser }}
        
    - name: Upload Cross-Browser Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cross-browser-reports-${{ matrix.browser }}
        path: |
          target/surefire-reports/
          reports/
